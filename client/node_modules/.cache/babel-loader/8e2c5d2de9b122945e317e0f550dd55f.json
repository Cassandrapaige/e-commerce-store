{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectFilterMenu = createSelector([selectShop], shop => shop.isFilterMenuHidden);\nexport const selectSortByDropdown = createSelector([selectShop], shop => shop.isDropdownHidden);\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectItemDetails = itemId => createSelector([selectCollectionForPreview], collections => collections.map(collection => collection.items.filter(item => item.id == itemId)));\nexport const selectSimilarItems = itemTags => createSelector([selectCollections]);\nexport const selectCollectionByFilter = value => createSelector([selectCollectionForPreview], collections => collections.map(collection => collection.items.filter(item => item.tags.includes(value))));\nexport const selectCollectionTags = createSelector([selectCollectionForPreview], collections => collections.map(collection => collection.items.map(item => item.tags).flat(1)));\nexport const selectCollectionByQuery = query => createSelector([selectCollectionForPreview], collections => collections.filter(item => item.title.includes(query)));\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectFilterMenu","isFilterMenuHidden","selectSortByDropdown","isDropdownHidden","selectCollections","collections","selectCollectionForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectItemDetails","itemId","collection","items","filter","item","id","selectSimilarItems","itemTags","selectCollectionByFilter","value","tags","includes","selectCollectionTags","flat","selectCollectionByQuery","query","title","selectIsCollectionFetching","isFetching","selectIsCollectionLoaded"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,gBAAgB,GAAGJ,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAEtCE,IAAI,IAAIA,IAAI,CAACE,kBAFyB,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAC9C,CAACC,UAAD,CAD8C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,gBAF6B,CAA3C;AAKP,OAAO,MAAMC,iBAAiB,GAAGR,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAEvCE,IAAI,IAAIA,IAAI,CAACM,WAF0B,CAAxC;AAKP,OAAO,MAAMC,0BAA0B,GAAGV,cAAc,CACpD,CAACQ,iBAAD,CADoD,EAEpDC,WAAW,IACPA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAHtB,CAAjD;AAMP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAAIhB,cAAc,CAChE,CAACQ,iBAAD,CADgE,EAEhEC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFC,CAA7D;AAKP,OAAO,MAAMC,iBAAiB,GAAGC,MAAM,IAAIlB,cAAc,CACrD,CAACU,0BAAD,CADqD,EAErDD,WAAW,IAAIA,WAAW,CACrBI,GADU,CACNM,UAAU,IAAIA,UAAU,CAACC,KAAX,CAClBC,MADkB,CACXC,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWL,MADR,CADR,CAFsC,CAAlD;AAOP,OAAO,MAAMM,kBAAkB,GAAGC,QAAQ,IAAIzB,cAAc,CACxD,CAACQ,iBAAD,CADwD,CAArD;AAIP,OAAO,MAAMkB,wBAAwB,GAAGC,KAAK,IAAI3B,cAAc,CAC3D,CAACU,0BAAD,CAD2D,EAE3DD,WAAW,IAAIA,WAAW,CACrBI,GADU,CACNM,UAAU,IAAIA,UAAU,CAACC,KAAX,CAClBC,MADkB,CACXC,IAAI,IAAIA,IAAI,CAACM,IAAL,CAAUC,QAAV,CAAmBF,KAAnB,CADG,CADR,CAF4C,CAAxD;AAOP,OAAO,MAAMG,oBAAoB,GAAG9B,cAAc,CAC9C,CAACU,0BAAD,CAD8C,EAE9CD,WAAW,IAAIA,WAAW,CACrBI,GADU,CACNM,UAAU,IAAIA,UAAU,CAACC,KAAX,CAAiBP,GAAjB,CAAqBS,IAAI,IAAIA,IAAI,CAACM,IAAlC,EAAwCG,IAAxC,CAA6C,CAA7C,CADR,CAF+B,CAA3C;AAMP,OAAO,MAAMC,uBAAuB,GAAGC,KAAK,IAAIjC,cAAc,CAC1D,CAACU,0BAAD,CAD0D,EAE1DD,WAAW,IAAIA,WAAW,CAACY,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACY,KAAL,CAAWL,QAAX,CAAoBI,KAApB,CAA3B,CAF2C,CAAvD;AAKP,OAAO,MAAME,0BAA0B,GAAGnC,cAAc,CACpD,CAACC,UAAD,CADoD,EAEpDE,IAAI,IAAIA,IAAI,CAACiC,UAFuC,CAAjD;AAKP,OAAO,MAAMC,wBAAwB,GAAGrC,cAAc,CAClD,CAACC,UAAD,CADkD,EAElDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACM,WAFmC,CAA/C","sourcesContent":["import {createSelector} from 'reselect'\n\nconst selectShop = state => state.shop\n\nexport const selectFilterMenu = createSelector(\n    [selectShop],\n        shop => shop.isFilterMenuHidden\n)\n\nexport const selectSortByDropdown = createSelector(\n    [selectShop],\n        shop => shop.isDropdownHidden\n)\n\nexport const selectCollections = createSelector(\n    [selectShop],\n        shop => shop.collections\n)\n\nexport const selectCollectionForPreview = createSelector(\n    [selectCollections],\n    collections => \n        collections ? Object.keys(collections).map(key => collections[key]) : []\n)\n\nexport const selectCollection = collectionUrlParam => createSelector(\n    [selectCollections],\n    collections => collections ? collections[collectionUrlParam] : null\n)\n\nexport const selectItemDetails = itemId => createSelector(\n    [selectCollectionForPreview],\n    collections => collections\n        .map(collection => collection.items\n        .filter(item => item.id == itemId))\n)\n\nexport const selectSimilarItems = itemTags => createSelector(\n    [selectCollections],\n\n)\nexport const selectCollectionByFilter = value => createSelector(\n    [selectCollectionForPreview],\n    collections => collections\n        .map(collection => collection.items\n        .filter(item => item.tags.includes(value)))\n)\n\nexport const selectCollectionTags = createSelector(\n    [selectCollectionForPreview],\n    collections => collections\n        .map(collection => collection.items.map(item => item.tags).flat(1))\n)\n\nexport const selectCollectionByQuery = query => createSelector(\n    [selectCollectionForPreview],\n    collections => collections.filter(item => item.title.includes(query))\n)\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selectIsCollectionLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections \n)\n\n"]},"metadata":{},"sourceType":"module"}