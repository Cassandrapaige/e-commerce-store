{"ast":null,"code":"var _jsxFileName = \"/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/client/src/App.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport Navbar from './components/navbar/navbar.component';\nimport Homepage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport CollectionDetailsPage from './pages/collection-details/collection-details.component';\nimport { auth, createUserProfileDocument, addCollectionAndDocuments } from './firebase/firebase.utils';\nimport { checkUserSession } from './redux/user/user.actions';\nimport { toggleCartHidden } from './redux/cart/cart.actions';\nimport { selectCartHidden } from './redux/cart/cart.selectors';\nimport { selectCurrentUser } from './redux/user/user.selector'; // import {selectCollectionForPreview} from './redux/shop/shop.selectors'\n\nimport './App.scss';\n\nconst App = ({\n  // collectionsArray, \n  checkUserSession,\n  hidden,\n  toggleCartHidden,\n  currentUser\n}) => {\n  let unsubscribeFromAuth = null;\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Homepage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }\n    }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), !hidden && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"screen-overlay\",\n    onClick: toggleCartHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  // collectionsArray: selectCollectionForPreview,\n  hidden: selectCartHidden\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession()),\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n}); // connect takes in mapStateToProps and mapDispatchToProps as parameters\n// pass null when you dont need to mapStateToProps\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/client/src/App.js"],"names":["React","Component","useEffect","useState","Route","Switch","Redirect","connect","createStructuredSelector","Navbar","Homepage","ShopPage","SignInAndSignUpPage","CheckoutPage","CollectionDetailsPage","auth","createUserProfileDocument","addCollectionAndDocuments","checkUserSession","toggleCartHidden","selectCartHidden","selectCurrentUser","App","hidden","currentUser","unsubscribeFromAuth","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {createStructuredSelector} from 'reselect'\n\nimport Navbar from './components/navbar/navbar.component'\nimport Homepage from './pages/homepage/homepage.component'\nimport ShopPage from './pages/shop/shop.component'\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'\nimport CheckoutPage from './pages/checkout/checkout.component'\nimport CollectionDetailsPage from './pages/collection-details/collection-details.component'\n\nimport { \n      auth, \n      createUserProfileDocument, \n      addCollectionAndDocuments \n    } from './firebase/firebase.utils'\n\nimport {checkUserSession } from './redux/user/user.actions';\nimport {toggleCartHidden} from './redux/cart/cart.actions'\n\nimport { selectCartHidden } from './redux/cart/cart.selectors'\nimport { selectCurrentUser } from './redux/user/user.selector';\n\n// import {selectCollectionForPreview} from './redux/shop/shop.selectors'\n\nimport './App.scss';\n\nconst App = (\n      {// collectionsArray, \n      checkUserSession,\n      hidden, \n      toggleCartHidden,\n      currentUser}) =>  {\n\n  let unsubscribeFromAuth = null;\n\n  useEffect(() => {\n    checkUserSession()\n  }, [checkUserSession])\n\n    return (\n      <div>\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Homepage} />\n            <Route path = '/shop' component = {ShopPage} />\n            <Route exact path = '/checkout' component = {CheckoutPage} />\n            <Route exact path = '/login' render = {() => currentUser ? \n                (<Redirect to = '/' />) : \n                (<SignInAndSignUpPage />)} />\n          </Switch>\n          {!hidden && <div className=\"screen-overlay\" onClick = {toggleCartHidden}></div>}\n      </div>\n    );\n  }\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  // collectionsArray: selectCollectionForPreview,\n  hidden: selectCartHidden\n})\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession()),\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\n// connect takes in mapStateToProps and mapDispatchToProps as parameters\n// pass null when you dont need to mapStateToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}