{"ast":null,"code":"var _jsxFileName = \"/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/src/App.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.scss';\nimport Header from './components/header/header.component';\nimport Homepage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\n\nconst App = () => {\n  const [unsubscribeFromAuth, setUnsubscribeFromAuth] = useState(null); // unsubscribeFromAuth = null;\n  // componentDidMount = () => {\n  //   const {setCurrentUser} = this.props;\n\n  const unsubscribe = setUnsubscribeFromAuth(auth.onAuthStateChanged(async userAuth => {\n    if (userAuth) {\n      const userRef = await createUserProfileDocument(userAuth); // calling 'snapshot' allows us to see if the document exists, and receive ID\n      // attaching the .data() method returns a full JSON object with the documents data\n\n      userRef.onSnapshot(snapshot => {\n        setCurrentUser({\n          id: snapshot.id,\n          ...snapshot.data()\n        });\n      });\n    } // user will be set to null\n\n\n    setCurrentUser(userAuth);\n  }));\n  useEffect(() => {\n    unsubscribe();\n  }, []); // Must unmount to avoid any memory leaks in subscription\n  // componentWillUnmount = () => {\n  //   this.unsubscribeFromAuth();\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Homepage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/shop\",\n    component: ShopPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }\n    }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })));\n};\n\nconst mapStateToProps = ({\n  user: {\n    currentUser\n  }\n}) => ({\n  currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n}); // connect takes in mapStateToProps and mapDispatchToProps as parameters\n// pass null when you dont need to mapStateToProps\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/src/App.js"],"names":["React","Component","useEffect","useState","Route","Switch","Redirect","connect","Header","Homepage","ShopPage","SignInAndSignUpPage","auth","createUserProfileDocument","setCurrentUser","App","unsubscribeFromAuth","setUnsubscribeFromAuth","unsubscribe","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","id","data","props","currentUser","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport './App.scss';\n\nimport Header from './components/header/header.component'\nimport Homepage from './pages/homepage/homepage.component'\nimport ShopPage from './pages/shop/shop.component'\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'\n\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils'\nimport {setCurrentUser} from './redux/user/user.actions'\n\nconst App = () => {\n  const [unsubscribeFromAuth, setUnsubscribeFromAuth] = useState(null)\n\n  // unsubscribeFromAuth = null;\n\n  // componentDidMount = () => {\n\n  //   const {setCurrentUser} = this.props;\n\n  const unsubscribe = setUnsubscribeFromAuth(auth.onAuthStateChanged(async userAuth => {\n      if(userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        // calling 'snapshot' allows us to see if the document exists, and receive ID\n        // attaching the .data() method returns a full JSON object with the documents data\n\n        userRef.onSnapshot(snapshot => {\n          setCurrentUser({\n              id: snapshot.id,\n              ...snapshot.data()\n            })\n        })}\n      // user will be set to null\n      setCurrentUser(userAuth)\n    })\n  )\n\n  useEffect(() => {\n    unsubscribe()\n  },[])\n\n  // Must unmount to avoid any memory leaks in subscription\n  // componentWillUnmount = () => {\n  //   this.unsubscribeFromAuth();\n  // }\n    return (\n      <div>\n          <Header/>\n          <Switch>\n            <Route exact path='/' component={Homepage} />\n            <Route exact path = '/shop' component = {ShopPage} />\n            <Route exact path = '/login' render = {() => this.props.currentUser ? \n                (<Redirect to = '/' />) : \n                (<SignInAndSignUpPage />)} />\n          </Switch>\n      </div>\n    );\n  }\n\nconst mapStateToProps = ({ user: { currentUser } }) => ({\n  currentUser\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n})\n\n// connect takes in mapStateToProps and mapDispatchToProps as parameters\n// pass null when you dont need to mapStateToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}