{"ast":null,"code":"var _jsxFileName = \"/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/client/src/components/filter-header/filter-header.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { toggleFillterMenu } from '../../redux/shop/shop.actions';\nimport { FilterHeaderContainer, Title, FilterOptionsContainer, FilterOption, FilterIcon, SortDropdownContainer, ArrowIcon } from './filter-header.styles';\nimport { selectFilterMenu } from '../../redux/shop/shop.selectors';\n\nconst FilterHeader = ({\n  title,\n  isOpen,\n  handleClick,\n  setIsOpen,\n  toggleFillterMenu\n}) => {\n  const [toggleDropdown, setToggleDropdown] = useState(false);\n  const [isPassedTop, setIsPassedTop] = useState(false);\n  window.addEventListener('scroll', event => {\n    if (window.pageYOffset > 150) {\n      setIsPassedTop(true);\n    } else {\n      setIsPassedTop(false);\n    }\n  });\n  return /*#__PURE__*/React.createElement(FilterHeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    isPassedTop: isPassedTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(FilterOptionsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FilterOption, {\n    onClick: () => toggleFillterMenu(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, hidden ? 'Show' : 'Hide', \" Filters\", /*#__PURE__*/React.createElement(FilterIcon, {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FilterOption, {\n    onClick: () => setToggleDropdown(!toggleDropdown),\n    toggleDropdown: toggleDropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Sort By\", /*#__PURE__*/React.createElement(ArrowIcon, {\n    toggleDropdown: toggleDropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(SortDropdownContainer, {\n    toggleDropdown: toggleDropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-type\": \"high\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Price: High-Low\"), /*#__PURE__*/React.createElement(\"span\", {\n    \"data-type\": \"low\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Price: Low-High\")));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  hidden: selectFilterMenu\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFillterMenu: () => dispatch(toggleFillterMenu())\n});\n\nexport default connect(null, mapDispatchToProps)(FilterHeader);","map":{"version":3,"sources":["/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/client/src/components/filter-header/filter-header.component.jsx"],"names":["React","useState","connect","toggleFillterMenu","FilterHeaderContainer","Title","FilterOptionsContainer","FilterOption","FilterIcon","SortDropdownContainer","ArrowIcon","selectFilterMenu","FilterHeader","title","isOpen","handleClick","setIsOpen","toggleDropdown","setToggleDropdown","isPassedTop","setIsPassedTop","window","addEventListener","event","pageYOffset","hidden","mapStateToProps","createStructuredSelector","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nimport {connect} from 'react-redux'\n\nimport {toggleFillterMenu} from '../../redux/shop/shop.actions'\n\nimport {FilterHeaderContainer,\n        Title,\n        FilterOptionsContainer,\n        FilterOption,\n        FilterIcon, \n        SortDropdownContainer,\n        ArrowIcon\n    } from './filter-header.styles'\nimport { selectFilterMenu } from '../../redux/shop/shop.selectors'\n\nconst FilterHeader = ({title, isOpen, handleClick, setIsOpen, toggleFillterMenu}) => {\n    const [toggleDropdown, setToggleDropdown] = useState(false);\n    const [isPassedTop, setIsPassedTop] = useState(false)\n\nwindow.addEventListener('scroll', event => {\n    if(window.pageYOffset > 150) {\n        setIsPassedTop(true)\n    } else {\n        setIsPassedTop(false)\n    }\n})\n\n    return (\n         <FilterHeaderContainer>\n            <Title isPassedTop = {isPassedTop}>{title}</Title>\n            <FilterOptionsContainer>\n                <FilterOption onClick = {() => toggleFillterMenu()}>\n                    {hidden ? 'Show' : 'Hide'} Filters\n                    <FilterIcon isOpen = {isOpen}></FilterIcon>\n                </FilterOption>\n                <FilterOption \n                    onClick = {() => setToggleDropdown(!toggleDropdown)}\n                    toggleDropdown = {toggleDropdown}>\n                    Sort By \n                    <ArrowIcon toggleDropdown = {toggleDropdown}>\n                        <span class = 'arrow-left'></span>\n                        <span class = 'arrow-left'></span>\n                    </ArrowIcon>  \n                </FilterOption>\n            </FilterOptionsContainer>\n            <SortDropdownContainer toggleDropdown = {toggleDropdown}>\n                <span data-type='high' onClick = {handleClick}>Price: High-Low</span>\n                <span data-type='low' onClick = {handleClick}>Price: Low-High</span>\n            </SortDropdownContainer>\n        </FilterHeaderContainer>\n    )\n}\n\nconst mapStateToProps = createStructuredSelector({\n    hidden: selectFilterMenu\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleFillterMenu: () => dispatch(toggleFillterMenu())\n})\n\nexport default connect(null,mapDispatchToProps)(FilterHeader)"]},"metadata":{},"sourceType":"module"}