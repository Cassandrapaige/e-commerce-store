{"ast":null,"code":"var _jsxFileName = \"/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.compopnent';\nimport CollectionDetailsPage from '../collection-details/collection-details.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport './shop.styles.scss';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nconst CollectionDetailsWithSpinner = WithSpinner(CollectionDetailsPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections'); // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //     updateCollections(collectionsMap)\n    //     this.setState({ loading: false })\n    // })\n\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n    fetch('https://firestore.googleapis.com/v1/projects/e-commerce-50e9e/databases/(default)/documents/collections').then(response => response.json()).then(collections => console.log(collections));\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 75\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 90\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/details/:itemId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionDetailsWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 92\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","CollectionsOverview","CollectionPage","CollectionDetailsPage","WithSpinner","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","CollectionDetailsWithSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","fetch","response","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.compopnent'\nimport CollectionDetailsPage from '../collection-details/collection-details.component'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n\nimport {updateCollections} from '../../redux/shop/shop.actions'\n\nimport './shop.styles.scss'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\nconst CollectionDetailsWithSpinner = WithSpinner(CollectionDetailsPage)\n\nclass ShopPage extends Component {\n    state = {\n        loading: true\n    }\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const {updateCollections} = this.props\n        const collectionRef = firestore.collection('collections');\n\n        // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        //     updateCollections(collectionsMap)\n        //     this.setState({ loading: false })\n        // })\n\n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n            updateCollections(collectionsMap)\n            this.setState({ loading: false })\n        })\n        \n        fetch('https://firestore.googleapis.com/v1/projects/e-commerce-50e9e/databases/(default)/documents/collections')\n        .then(response => response.json())\n        .then(collections => console.log(collections))\n    }\n    render() {\n        const {match} = this.props;\n        const {loading} = this.state\n\n        return(\n            <div className = 'shop-page'>\n                <Route exact path ={`${match.path}`} render = {(props) => <CollectionsOverviewWithSpinner isLoading = {loading} {...props} />} />\n                <Route exact path = {`${match.path}/:collectionId`} render = {(props) => <CollectionPageWithSpinner isLoading = {loading} {...props} />} />\n                <Route exact path = {`${match.path}/details/:itemId`} render = {(props) => <CollectionDetailsWithSpinner isLoading = {loading} {...props} />} />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}