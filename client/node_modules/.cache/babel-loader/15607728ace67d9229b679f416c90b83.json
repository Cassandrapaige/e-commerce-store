{"ast":null,"code":"var _jsxFileName = \"/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport Navbar from './components/navbar/navbar.component';\nimport Homepage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport { selectCurrentUser } from './redux/user/user.selector';\nimport { checkUserSession } from './redux/user/user.actions'; // import {selectCollectionForPreview} from './redux/shop/shop.selectors'\n\nimport { selectCartHidden } from './redux/cart/cart.selectors';\nimport './App.scss';\n\nconst App = ({\n  // collectionsArray, \n  hidden,\n  checkUserSession,\n  currentUser\n}) => {\n  let unsubscribeFromAuth = null;\n  useEffect(() => {\n    checkUserSession();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Homepage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }\n    }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })), !hidden && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"screen-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  // collectionsArray: selectCollectionForPreview,\n  hidden: selectCartHidden\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n}); // connect takes in mapStateToProps and mapDispatchToProps as parameters\n// pass null when you dont need to mapStateToProps\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/src/App.js"],"names":["React","useEffect","useState","Route","Switch","Redirect","connect","createStructuredSelector","Navbar","Homepage","ShopPage","SignInAndSignUpPage","CheckoutPage","selectCurrentUser","checkUserSession","selectCartHidden","App","hidden","currentUser","unsubscribeFromAuth","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAAQC,gBAAR,QAA+B,2BAA/B,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AAEA,OAAO,YAAP;;AAEA,MAAMC,GAAG,GAAG,CAAC;AACX;AACAC,EAAAA,MAFW;AAGXH,EAAAA,gBAHW;AAIXI,EAAAA;AAJW,CAAD,KAIQ;AAClB,MAAIC,mBAAmB,GAAG,IAA1B;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,gBAAgB;AACjB,GAFQ,EAEP,EAFO,CAAT;AAIE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEL,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,OAAd;AAAsB,IAAA,SAAS,EAAIC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,WAApB;AAAgC,IAAA,SAAS,EAAIE,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,QAApB;AAA6B,IAAA,MAAM,EAAI,MAAMM,WAAW,gBACnD,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAG,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADmD,gBAEnD,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFJ,EAUK,CAACD,MAAD,iBAAW;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVhB,CADF;AAcD,CAzBH;;AA2BA,MAAMG,eAAe,GAAGb,wBAAwB,CAAC;AAC/CW,EAAAA,WAAW,EAAEL,iBADkC;AAE/C;AACAI,EAAAA,MAAM,EAAEF;AAHuC,CAAD,CAAhD;;AAMA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACtCR,EAAAA,gBAAgB,EAAE,MAAMQ,QAAQ,CAACR,gBAAgB,EAAjB;AADM,CAAL,CAAnC,C,CAIA;AACA;;;AACA,eAAeR,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,GAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {createStructuredSelector} from 'reselect'\n\nimport Navbar from './components/navbar/navbar.component'\nimport Homepage from './pages/homepage/homepage.component'\nimport ShopPage from './pages/shop/shop.component'\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'\nimport CheckoutPage from './pages/checkout/checkout.component'\n\nimport { selectCurrentUser } from './redux/user/user.selector';\nimport {checkUserSession} from './redux/user/user.actions'\n\n// import {selectCollectionForPreview} from './redux/shop/shop.selectors'\nimport { selectCartHidden } from './redux/cart/cart.selectors'\n\nimport './App.scss';\n\nconst App = ({\n  // collectionsArray, \n  hidden, \n  checkUserSession,\n  currentUser}) =>  {\n  let unsubscribeFromAuth = null;\n\n  useEffect(() => {\n    checkUserSession();\n  },[])\n\n    return (\n      <div>\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Homepage} />\n            <Route path = '/shop' component = {ShopPage} />\n            <Route exact path = '/checkout' component = {CheckoutPage} />\n            <Route exact path = '/login' render = {() => currentUser ? \n                (<Redirect to = '/' />) : \n                (<SignInAndSignUpPage />)} />\n          </Switch>\n          {!hidden && <div className=\"screen-overlay\"></div>}\n      </div>\n    );\n  }\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  // collectionsArray: selectCollectionForPreview,\n  hidden: selectCartHidden\n})\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n})\n\n// connect takes in mapStateToProps and mapDispatchToProps as parameters\n// pass null when you dont need to mapStateToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}