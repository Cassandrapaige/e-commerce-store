{"ast":null,"code":"var _jsxFileName = \"/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/cutom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { emailSignInStart, googleSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"I already have an account \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Sign in with you email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: state.email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Sign In With Google\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","auth","signInWithGoogle","emailSignInStart","googleSignInStart","SignIn","email","setEmail","useState","password","setPassword","handleSubmit","event","preventDefault","handleChange","value","name","target","setState","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,uBAAP;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AAEA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,+BAAvC;AAEA,SAAQC,gBAAR,EACQC,iBADR,QAEe,+BAFf;AAIA,OAAO,uBAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACF,EAAAA,gBAAD;AAAmBC,EAAAA;AAAnB,CAAD,KAA2C;AACtD,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BF,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMG,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAV,IAAAA,gBAAgB,CAACG,KAAD,EAAQG,QAAR,CAAhB;AACH,GAHD;;AAKA,QAAMK,YAAY,GAAGF,KAAK,IAAI;AAC1B,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBJ,KAAK,CAACK,MAA9B;AACA,SAAKC,QAAL,CAAc;AACV,OAACF,IAAD,GAAQD;AADE,KAAd;AAGH,GALD;;AAOI,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFJ,eAII;AAAM,IAAA,QAAQ,EAAIJ,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAG,OADX;AAEI,IAAA,IAAI,EAAG,OAFX;AAGI,IAAA,KAAK,EAAGQ,KAAK,CAACb,KAHlB;AAII,IAAA,YAAY,EAAIQ,YAJpB;AAKI,IAAA,KAAK,EAAG,OALZ;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAG,UADX;AAEI,IAAA,IAAI,EAAG,UAFX;AAGI,IAAA,KAAK,EAAGL,QAHZ;AAII,IAAA,YAAY,EAAIK,YAJpB;AAKI,IAAA,KAAK,EAAG,UALZ;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAiBI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBJ,eAoBI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAE,QAApB;AAA6B,IAAA,OAAO,EAAKV,iBAAzC;AAA6D,IAAA,cAAc,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BApBJ,CAJJ,CADJ;AA+BH,CA/CL;;AAkDA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,iBAAiB,EAAE,MAAMiB,QAAQ,CAACjB,iBAAiB,EAAlB,CADG;AAEpCD,EAAAA,gBAAgB,EAAE,CAACG,KAAD,EAAQG,QAAR,KAChBY,QAAQ,CAAClB,gBAAgB,CAAC;AAAEG,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAD,CAAjB;AAH0B,CAAL,CAAnC;;AAMA,eAAeX,OAAO,CAClB,IADkB,EAElBsB,kBAFkB,CAAP,CAGTf,MAHS,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\n\nimport './sign-in.styles.scss'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/cutom-button.component'\n\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils'\n\nimport {emailSignInStart,\n        googleSignInStart\n        } from '../../redux/user/user.actions'\n\nimport './sign-in.styles.scss'\n\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        emailSignInStart(email, password)\n    }\n\n    const handleChange = event => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n        return (\n            <div className='sign-in'>\n                <h2>I already have an account </h2>\n                <span>Sign in with you email and password</span>\n\n                <form onSubmit = {handleSubmit}>\n                    <FormInput \n                        type = 'email'\n                        name = 'email' \n                        value= {state.email}\n                        handleChange = {handleChange}\n                        label = 'email'\n                        required/>\n                    \n                    <FormInput \n                        type = 'password'\n                        name = 'password' \n                        value= {password}\n                        handleChange = {handleChange}\n                        label = 'password'\n                        required/>\n\n                    <CustomButton type= 'submit'>\n                        Sign In\n                    </CustomButton>\n                    <CustomButton type= 'button' onClick = { googleSignInStart } isGoogleSignIn>\n                        Sign In With Google\n                    </CustomButton>\n                </form>\n            </div>\n        )\n    }\n\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) =>\n      dispatch(emailSignInStart({ email, password }))\n  });\n\nexport default connect(\n    null, \n    mapDispatchToProps\n    )(SignIn)"]},"metadata":{},"sourceType":"module"}