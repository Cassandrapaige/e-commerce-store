{"ast":null,"code":"var _jsxFileName = \"/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/client/src/components/filter-header/filter-header.component.jsx\";\nimport React, { useState } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { toggleFillterMenu, toggleSortByDropdown } from '../../redux/shop/shop.actions';\nimport { selectFilterMenu, selectSortByDropdown } from '../../redux/shop/shop.selectors';\nimport { FilterHeaderContainer, Title, FilterOptionsContainer, FilterOption, FilterIcon, SortDropdownContainer, ArrowIcon } from './filter-header.styles';\n\nconst FilterHeader = ({\n  title,\n  handleClick,\n  isFilterMenuHidden,\n  isDropdownHidden,\n  setIsDropdownHidden,\n  setIsFilterMenuHidden\n}) => {\n  const [isPassedTop, setIsPassedTop] = useState(false);\n  window.addEventListener('scroll', event => {\n    if (window.pageYOffset > 150) {\n      setIsPassedTop(true);\n    } else {\n      setIsPassedTop(false);\n    }\n  });\n  return /*#__PURE__*/React.createElement(FilterHeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    isPassedTop: isPassedTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(FilterOptionsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FilterOption, {\n    onClick: () => setIsFilterMenuHidden(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, isFilterMenuHidden ? 'Show' : 'Hide', \" Filters\", /*#__PURE__*/React.createElement(FilterIcon, {\n    hidden: isFilterMenuHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FilterOption, {\n    onClick: () => setIsDropdownHidden(),\n    toggleDropdown: isDropdownHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Sort By\", /*#__PURE__*/React.createElement(ArrowIcon, {\n    toggleDropdown: isDropdownHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(SortDropdownContainer, {\n    toggleDropdown: isDropdownHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-type\": \"high\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Price: High-Low\"), /*#__PURE__*/React.createElement(\"span\", {\n    \"data-type\": \"low\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Price: Low-High\")));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isFilterMenuHidden: selectFilterMenu,\n  isDropdownHidden: selectSortByDropdown\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setIsFilterMenuHidden: () => dispatch(toggleFillterMenu()),\n  setIsDropdownHidden: () => dispatch(toggleSortByDropdown())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterHeader);","map":{"version":3,"sources":["/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/client/src/components/filter-header/filter-header.component.jsx"],"names":["React","useState","createStructuredSelector","connect","toggleFillterMenu","toggleSortByDropdown","selectFilterMenu","selectSortByDropdown","FilterHeaderContainer","Title","FilterOptionsContainer","FilterOption","FilterIcon","SortDropdownContainer","ArrowIcon","FilterHeader","title","handleClick","isFilterMenuHidden","isDropdownHidden","setIsDropdownHidden","setIsFilterMenuHidden","isPassedTop","setIsPassedTop","window","addEventListener","event","pageYOffset","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {createStructuredSelector} from 'reselect'\n\nimport {connect} from 'react-redux'\n\nimport {toggleFillterMenu, toggleSortByDropdown} from '../../redux/shop/shop.actions'\n\nimport { selectFilterMenu, selectSortByDropdown } from '../../redux/shop/shop.selectors'\n\nimport {FilterHeaderContainer,\n        Title,\n        FilterOptionsContainer,\n        FilterOption,\n        FilterIcon, \n        SortDropdownContainer,\n        ArrowIcon\n    } from './filter-header.styles'\n\nconst FilterHeader = ({\n            title, \n            handleClick, \n            isFilterMenuHidden, \n            isDropdownHidden, \n            setIsDropdownHidden, \n            setIsFilterMenuHidden}) => {\n\n    const [isPassedTop, setIsPassedTop] = useState(false)\n\n    window.addEventListener('scroll', event => {\n        if(window.pageYOffset > 150) {\n            setIsPassedTop(true)\n        } else {\n            setIsPassedTop(false)\n        }\n    })\n\n    return (\n         <FilterHeaderContainer>\n            <Title isPassedTop = {isPassedTop}>{title}</Title>\n            <FilterOptionsContainer>\n                <FilterOption onClick = {() => setIsFilterMenuHidden()}>\n                    {isFilterMenuHidden ? 'Show' : 'Hide'} Filters\n                    <FilterIcon hidden = {isFilterMenuHidden}></FilterIcon>\n                </FilterOption>\n                <FilterOption \n                    onClick = {() => setIsDropdownHidden()}\n                    toggleDropdown = {isDropdownHidden}>\n                    Sort By \n                    <ArrowIcon toggleDropdown = {isDropdownHidden}>\n                        <span class = 'arrow-left'></span>\n                        <span class = 'arrow-left'></span>\n                    </ArrowIcon>  \n                </FilterOption>\n            </FilterOptionsContainer>\n            <SortDropdownContainer toggleDropdown = {isDropdownHidden}>\n                <span data-type='high' onClick = {handleClick}>Price: High-Low</span>\n                <span data-type='low' onClick = {handleClick}>Price: Low-High</span>\n            </SortDropdownContainer>\n        </FilterHeaderContainer>\n    )\n}\n\nconst mapStateToProps = createStructuredSelector({\n    isFilterMenuHidden: selectFilterMenu,\n    isDropdownHidden : selectSortByDropdown\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setIsFilterMenuHidden: () => dispatch(toggleFillterMenu()),\n    setIsDropdownHidden: () => dispatch(toggleSortByDropdown())\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(FilterHeader)"]},"metadata":{},"sourceType":"module"}