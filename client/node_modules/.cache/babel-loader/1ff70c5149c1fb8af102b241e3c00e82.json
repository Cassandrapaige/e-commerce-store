{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectFilterMenu = createSelector([selectShop], shop => shop.hidden);\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const getItemDetails = itemId => createSelector([selectCollectionForPreview], collections => collections.map(collection => collection.items.filter(item => item.id == itemId)));\nexport const selectCollectionByFilter = value => createSelector([selectCollectionForPreview], collections => collections.map(collection => collection.items.filter(item => item.tags.includes(value))));\nexport const selectCollectionTags = createSelector([selectCollectionForPreview], collections => collections.map(collection => collection.items).map(item => item.map(i => i.tags).flat(1)));\nexport const selectCollectionByQuery = query => createSelector([selectCollectionForPreview], collections => collections.filter(item => item.title.includes(query)));\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectFilterMenu","hidden","selectCollections","collections","selectCollectionForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","getItemDetails","itemId","collection","items","filter","item","id","selectCollectionByFilter","value","tags","includes","selectCollectionTags","i","flat","selectCollectionByQuery","query","title","selectIsCollectionFetching","isFetching","selectIsCollectionLoaded"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,gBAAgB,GAAGJ,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAEtCE,IAAI,IAAIA,IAAI,CAACE,MAFyB,CAAvC;AAKP,OAAO,MAAMC,iBAAiB,GAAGN,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAEvCE,IAAI,IAAIA,IAAI,CAACI,WAF0B,CAAxC;AAKP,OAAO,MAAMC,0BAA0B,GAAGR,cAAc,CACpD,CAACM,iBAAD,CADoD,EAEpDC,WAAW,IACPA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAHtB,CAAjD;AAMP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAAId,cAAc,CAChE,CAACM,iBAAD,CADgE,EAEhEC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFC,CAA7D;AAKP,OAAO,MAAMC,cAAc,GAAGC,MAAM,IAAIhB,cAAc,CAClD,CAACQ,0BAAD,CADkD,EAElDD,WAAW,IAAIA,WAAW,CACrBI,GADU,CACNM,UAAU,IAAIA,UAAU,CAACC,KAAX,CAClBC,MADkB,CACXC,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWL,MADR,CADR,CAFmC,CAA/C;AAOP,OAAO,MAAMM,wBAAwB,GAAGC,KAAK,IAAIvB,cAAc,CAC3D,CAACQ,0BAAD,CAD2D,EAE3DD,WAAW,IAAIA,WAAW,CACrBI,GADU,CACNM,UAAU,IAAIA,UAAU,CAACC,KAAX,CAClBC,MADkB,CACXC,IAAI,IAAIA,IAAI,CAACI,IAAL,CAAUC,QAAV,CAAmBF,KAAnB,CADG,CADR,CAF4C,CAAxD;AAOP,OAAO,MAAMG,oBAAoB,GAAG1B,cAAc,CAC9C,CAACQ,0BAAD,CAD8C,EAE9CD,WAAW,IAAIA,WAAW,CACrBI,GADU,CACNM,UAAU,IAAIA,UAAU,CAACC,KADnB,EAEVP,GAFU,CAENS,IAAI,IAAIA,IAAI,CAACT,GAAL,CAASgB,CAAC,IAAIA,CAAC,CAACH,IAAhB,EAAsBI,IAAtB,CAA2B,CAA3B,CAFF,CAF+B,CAA3C;AAOP,OAAO,MAAMC,uBAAuB,GAAGC,KAAK,IAAI9B,cAAc,CAC1D,CAACQ,0BAAD,CAD0D,EAE1DD,WAAW,IAAIA,WAAW,CAACY,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACW,KAAL,CAAWN,QAAX,CAAoBK,KAApB,CAA3B,CAF2C,CAAvD;AAKP,OAAO,MAAME,0BAA0B,GAAGhC,cAAc,CACpD,CAACC,UAAD,CADoD,EAEpDE,IAAI,IAAIA,IAAI,CAAC8B,UAFuC,CAAjD;AAKP,OAAO,MAAMC,wBAAwB,GAAGlC,cAAc,CAClD,CAACC,UAAD,CADkD,EAElDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACI,WAFmC,CAA/C","sourcesContent":["import {createSelector} from 'reselect'\n\nconst selectShop = state => state.shop\n\nexport const selectFilterMenu = createSelector(\n    [selectShop],\n        shop => shop.hidden\n)\n\nexport const selectCollections = createSelector(\n    [selectShop],\n        shop => shop.collections\n)\n\nexport const selectCollectionForPreview = createSelector(\n    [selectCollections],\n    collections => \n        collections ? Object.keys(collections).map(key => collections[key]) : []\n)\n\nexport const selectCollection = collectionUrlParam => createSelector(\n    [selectCollections],\n    collections => collections ? collections[collectionUrlParam] : null\n)\n\nexport const getItemDetails = itemId => createSelector(\n    [selectCollectionForPreview],\n    collections => collections\n        .map(collection => collection.items\n        .filter(item => item.id == itemId))\n)\n\nexport const selectCollectionByFilter = value => createSelector(\n    [selectCollectionForPreview],\n    collections => collections\n        .map(collection => collection.items\n        .filter(item => item.tags.includes(value)))\n)\n\nexport const selectCollectionTags = createSelector(\n    [selectCollectionForPreview],\n    collections => collections\n        .map(collection => collection.items)\n        .map(item => item.map(i => i.tags).flat(1))\n)\n\nexport const selectCollectionByQuery = query => createSelector(\n    [selectCollectionForPreview],\n    collections => collections.filter(item => item.title.includes(query))\n)\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selectIsCollectionLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections \n)\n\n"]},"metadata":{},"sourceType":"module"}