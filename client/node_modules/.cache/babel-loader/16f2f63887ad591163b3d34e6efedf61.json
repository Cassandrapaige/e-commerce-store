{"ast":null,"code":"var _jsxFileName = \"/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/src/App.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './App.scss';\nimport Header from './components/header/header.component';\nimport Homepage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selector';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n\n    this.componentDidMount = () => {\n      const {\n        setCurrentUser\n      } = this.props;\n      this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth); // calling 'snapshot' allows us to see if the document exists, and receive ID\n          // attaching the .data() method returns a full JSON object with the documents data\n\n          userRef.onSnapshot(snapshot => {\n            setCurrentUser({\n              id: snapshot.id,\n              ...snapshot.data()\n            });\n          });\n        } // user will be set to null\n\n\n        setCurrentUser(userAuth);\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      this.unsubscribeFromAuth();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Homepage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 18\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n}); // connect takes in mapStateToProps and mapDispatchToProps as parameters\n// pass null when you dont need to mapStateToProps\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/src/App.js"],"names":["React","Component","useEffect","useState","Route","Switch","Redirect","connect","createStructuredSelector","Header","Homepage","ShopPage","SignInAndSignUpPage","auth","createUserProfileDocument","setCurrentUser","selectCurrentUser","App","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {createStructuredSelector} from 'reselect'\n\nimport './App.scss';\n\nimport Header from './components/header/header.component'\nimport Homepage from './pages/homepage/homepage.component'\nimport ShopPage from './pages/shop/shop.component'\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'\n\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils'\nimport {setCurrentUser} from './redux/user/user.actions'\nimport { selectCurrentUser } from './redux/user/user.selector';\n\nclass App extends Component {\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount = () => {\n\n    const {setCurrentUser} = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        // calling 'snapshot' allows us to see if the document exists, and receive ID\n        // attaching the .data() method returns a full JSON object with the documents data\n\n        userRef.onSnapshot(snapshot => {\n          setCurrentUser({\n              id: snapshot.id,\n              ...snapshot.data()\n            })\n        })}\n      // user will be set to null\n      setCurrentUser(userAuth)\n    })\n  }\n\n  // Must unmount to avoid any memory leaks in subscription\n  componentWillUnmount = () => {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n          <Header/>\n          <Switch>\n            <Route exact path='/' component={Homepage} />\n            <Route exact path = '/shop' component = {ShopPage} />\n            <Route exact path = '/login' render = {() => this.props.currentUser ? \n                (<Redirect to = '/' />) : \n                (<SignInAndSignUpPage />)} />\n          </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n})\n\n// connect takes in mapStateToProps and mapDispatchToProps as parameters\n// pass null when you dont need to mapStateToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}