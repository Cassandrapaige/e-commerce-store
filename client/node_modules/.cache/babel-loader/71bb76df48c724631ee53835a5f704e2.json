{"ast":null,"code":"var _jsxFileName = \"/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/client/src/App.js\";\nimport React, { lazy, Suspense, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport Navbar from './components/navbar/navbar.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport CollectionDetailsPage from './pages/collection-details/collection-details.component';\nimport { auth, createUserProfileDocument, addCollectionAndDocuments } from './firebase/firebase.utils';\nimport { checkUserSession } from './redux/user/user.actions';\nimport { selectCartHidden } from './redux/cart/cart.selectors';\nimport { selectCurrentUser } from './redux/user/user.selector'; // import {selectCollectionForPreview} from './redux/shop/shop.selectors'\n\nimport './App.scss';\nconst Homepage = lazy(() => import('./pages/homepage/homepage.component'));\n\nconst App = ({\n  // collectionsArray, \n  checkUserSession,\n  hidden,\n  toggleCartHidden,\n  currentUser\n}) => {\n  let unsubscribeFromAuth = null;\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Homepage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }\n    }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  // collectionsArray: selectCollectionForPreview,\n  hidden: selectCartHidden\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n}); // connect takes in mapStateToProps and mapDispatchToProps as parameters\n// pass null when you dont need to mapStateToProps\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/cassandrarossall/Desktop/WEB DEV/Complete_React_Developer_Course/e-commerce Store/e-commerce-store/client/src/App.js"],"names":["React","lazy","Suspense","useEffect","Route","Switch","Redirect","connect","createStructuredSelector","Navbar","ShopPage","SignInAndSignUpPage","CheckoutPage","CollectionDetailsPage","auth","createUserProfileDocument","addCollectionAndDocuments","checkUserSession","selectCartHidden","selectCurrentUser","Homepage","App","hidden","toggleCartHidden","currentUser","unsubscribeFromAuth","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,qBAAP,MAAkC,yDAAlC;AAEA,SACMC,IADN,EAEMC,yBAFN,EAGMC,yBAHN,QAIW,2BAJX;AAMA,SAAQC,gBAAR,QAAgC,2BAAhC;AAEA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,iBAAT,QAAkC,4BAAlC,C,CAEA;;AAEA,OAAO,YAAP;AAEA,MAAMC,QAAQ,GAAGnB,IAAI,CAAC,MAAM,OAAO,qCAAP,CAAP,CAArB;;AAEA,MAAMoB,GAAG,GAAG,CACN;AAAC;AACDJ,EAAAA,gBADA;AAEAK,EAAAA,MAFA;AAGAC,EAAAA,gBAHA;AAIAC,EAAAA;AAJA,CADM,KAKY;AAEtB,MAAIC,mBAAmB,GAAG,IAA1B;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAIE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEG,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,OAAd;AAAsB,IAAA,SAAS,EAAIV,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,WAApB;AAAgC,IAAA,SAAS,EAAIE,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,QAApB;AAA6B,IAAA,MAAM,EAAI,MAAMY,WAAW,gBACnD,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAG,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADmD,gBAEnD,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFJ,CADF;AAaD,CA1BH;;AA4BA,MAAME,eAAe,GAAGlB,wBAAwB,CAAC;AAC/CgB,EAAAA,WAAW,EAAEL,iBADkC;AAE/C;AACAG,EAAAA,MAAM,EAAEJ;AAHuC,CAAD,CAAhD;;AAMA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACtCX,EAAAA,gBAAgB,EAAE,MAAMW,QAAQ,CAACX,gBAAgB,EAAjB;AADM,CAAL,CAAnC,C,CAIA;AACA;;;AACA,eAAeV,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CN,GAA7C,CAAf","sourcesContent":["import React, { lazy, Suspense, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {createStructuredSelector} from 'reselect'\n\nimport Navbar from './components/navbar/navbar.component'\nimport ShopPage from './pages/shop/shop.component'\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'\nimport CheckoutPage from './pages/checkout/checkout.component'\nimport CollectionDetailsPage from './pages/collection-details/collection-details.component'\n\nimport { \n      auth, \n      createUserProfileDocument, \n      addCollectionAndDocuments \n    } from './firebase/firebase.utils'\n\nimport {checkUserSession } from './redux/user/user.actions';\n\nimport { selectCartHidden } from './redux/cart/cart.selectors'\nimport { selectCurrentUser } from './redux/user/user.selector';\n\n// import {selectCollectionForPreview} from './redux/shop/shop.selectors'\n\nimport './App.scss';\n\nconst Homepage = lazy(() => import('./pages/homepage/homepage.component'))\n\nconst App = (\n      {// collectionsArray, \n      checkUserSession,\n      hidden, \n      toggleCartHidden,\n      currentUser}) =>  {\n\n  let unsubscribeFromAuth = null;\n\n  useEffect(() => {\n    checkUserSession()\n  }, [checkUserSession])\n\n    return (\n      <div>\n          <Navbar/>\n          <Switch>\n              <Route exact path='/' component={Homepage} />\n              <Route path = '/shop' component = {ShopPage} />\n              <Route exact path = '/checkout' component = {CheckoutPage} />\n              <Route exact path = '/login' render = {() => currentUser ? \n                  (<Redirect to = '/' />) : \n                  (<SignInAndSignUpPage />)} />\n          </Switch>\n      </div>\n    );\n  }\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  // collectionsArray: selectCollectionForPreview,\n  hidden: selectCartHidden\n})\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession()),\n});\n\n// connect takes in mapStateToProps and mapDispatchToProps as parameters\n// pass null when you dont need to mapStateToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}